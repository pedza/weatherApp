{"version":3,"sources":["componentAPICall.js","searchManagerComponent.js","app.js","index.js","Images/sunset2.jpg"],"names":["APIcall","props","state","error","isLoaded","items","items2","url","urls","url2","this","fetchData","fetch","then","res","json","result","a","console","log","setState","res2","result_2","unix","date","Date","toUTCstring","toUTCString","currentDate","slice","day","getDay","currentDay","prevProps","main","weather","sys","dt","wind","list","name","charAt","toUpperCase","weatherIcon","array","index","length","icon","weatherDescription","description","message","className","country","timeStampFunction","src","alt","Math","round","temp","feels_like","humidity","speed","pressure","arrayList","undefined","map","element","key","id","dt_txt","hourlyForcast","Component","SearchManager","onChange","e","newCityText","target","value","useForceUpdate","React","useState","forceUpdate","useCallback","s","currentCity","handleSubmit","preventDefault","returnCity","defaultCity","onSubmit","App","image","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e70fab0a.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import App from './app'\r\n\r\n\r\nclass APIcall extends Component\r\n{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items:[],\r\n            items2:[],\r\n            url: \"https://api.openweathermap.org/data/2.5/weather?q=\"+this.props.urls+\"&units=metric&appid=5028b23243c12ce9c01337e4bf4ea0ae\",\r\n            url2: \"https://api.openweathermap.org/data/2.5/forecast?q=\"+this.props.urls+\"&units=metric&appid=e5662bf01e556be8c308a23141fe5d4f\"\r\n        }\r\n    \r\n    }\r\n\r\ncomponentDidMount(){\r\n    this.fetchData(this.state.url, this.state.url2)\r\n    // this.fetchData2(this.state2.url2)\r\n    \r\n\r\n}\r\n\r\nfetchData(url, url2){\r\n    fetch(url)\r\n        .then(res => res.json())\r\n        .then(async (result) => {\r\n                console.log(result)\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    items: result\r\n                });\r\n            \r\n            const res2 = await fetch(url2);\r\n            const result_2 = await res2.json();\r\n            this.setState({\r\n                items2: result_2\r\n            });\r\n            console.log(this.state.items2);\r\n            console.log(this.state.items);   \r\n             \r\n            },\r\n            (error)=>{\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                });\r\n            }\r\n            )\r\n          \r\n}\r\n\r\ntimeStampFunction(unix){\r\n    let date = new Date(unix*1000);\r\n    let toUTCstring = date.toUTCString();\r\n    let currentDate = toUTCstring.slice(5, -17);\r\n    let day = date.getDay()\r\n    let currentDay=\"\"\r\n    console.log(toUTCstring)\r\n    \r\n    \r\n   \r\n         switch(day){\r\n           \r\n            case 1:\r\n                if (day === 1){\r\n                    currentDay = \"Monday\"\r\n                }\r\n            break; \r\n            case 2:\r\n                if (day === 2){\r\n                    currentDay = \"Tuesday\"\r\n                }\r\n            break;\r\n            case 3:\r\n                if (day === 3){\r\n                    currentDay = \"Wednesday\"\r\n                }\r\n            break;\r\n            case 4:\r\n                if (day === 4){\r\n                    currentDay = \"Thursday\"\r\n                }\r\n            break;\r\n            case 5:\r\n                if (day === 5){\r\n                    currentDay = \"Friday\"\r\n                }\r\n            break;\r\n            case 6:\r\n                if (day === 6){\r\n                    currentDay = \"Saturday\"\r\n                }\r\n            break;\r\n            case 7:\r\n                if (day === 7){\r\n                    currentDay = \"Sunday\"\r\n                }\r\n            break;\r\n            default: currentDay = \"no such day\"\r\n        }\r\n   \r\n    \r\n    \r\n    return currentDay + \", \" + currentDate\r\n    \r\n}\r\n\r\ncomponentDidUpdate(prevProps){\r\n    \r\n    if (prevProps.urls !== this.props.urls){\r\n        \r\n        this.fetchData(\"https://api.openweathermap.org/data/2.5/weather?q=\"+this.props.urls+\"&units=metric&appid=5028b23243c12ce9c01337e4bf4ea0ae\", \r\n        \"http://api.openweathermap.org/data/2.5/forecast?q=\"+this.props.urls+\"&units=metric&appid=e5662bf01e556be8c308a23141fe5d4f\")\r\n        // this.fetchData2(\"http://api.openweathermap.org/data/2.5/forecast?q=\"+this.props.urls+\"&units=metric&appid=e5662bf01e556be8c308a23141fe5d4f\")\r\n        // this.setState({url2:\"http://api.openweathermap.org/data/2.5/forecast?q=\"+this.props.urls+\"&units=metric&appid=e5662bf01e556be8c308a23141fe5d4f\"})\r\n        \r\n        console.log(prevProps)\r\n        console.log(this.props.urls)\r\n    }\r\n}\r\n//test\r\n\r\n\r\n//test\r\n    render(){\r\n        \r\n        \r\n        const {error, isLoaded, items, items2} = this.state;\r\n        const {main, weather, sys, dt, wind} = items;\r\n        const {list} = items2;\r\n        console.log(list);\r\n        \r\n        if(items.name !== this.props.urls.charAt(0).toUpperCase()+this.props.urls.slice(1)){\r\n            return <div>The city is not found</div>\r\n        }\r\n        \r\n       \r\n        \r\n        let weatherIcon = function(array){\r\n            for (let index = 0; index < array.length; index++) {\r\n               \r\n                let childArray=array[index];\r\n                return childArray.icon\r\n             }\r\n        }\r\n        let weatherDescription = function(array){\r\n            for (let index = 0; index < array.length; index++) {\r\n               \r\n                let childArray=array[index];\r\n                return childArray.description\r\n            }\r\n        }\r\n        \r\n\r\n        let hourlyForcast = function(arrayList){\r\n           if (arrayList === undefined){\r\n               return;\r\n           }\r\n           else{\r\n                const forcastEl=arrayList;\r\n                \r\n                const elements = forcastEl.slice(0,6).map((element)=>\r\n                <ul key={element.id} className=\"forcastBodyStyle\">\r\n                    <li key={element.id}>\r\n                        {element.dt_txt.slice(11, -6)}h \r\n                        <span className=\"dateStyle\">{element.dt_txt.slice(8,-9)}\r\n                        /{element.dt_txt.slice(5,-12)}</span>\r\n                    </li>\r\n                    <li key={element.id}>\r\n                        <img \r\n                        src={\"https://openweathermap.org/img/w/\"+weatherIcon(element.weather)+\".png\"}\r\n                        alt=\"icon\"/>\r\n                        <span className=\"forcastCelziusStyle\">{Math.round(element.main.temp)}&#176;C</span>\r\n                    </li>\r\n                    <li key={element.id}>\r\n                        {weatherDescription(element.weather)}\r\n                    </li>\r\n                    <li>\r\n                        feels like: {Math.round(element.main.feels_like)}&#176;C\r\n                    </li>\r\n                </ul>\r\n                );\r\n                     \r\n                return elements        \r\n                   \r\n                }\r\n            \r\n           }\r\n        \r\n\r\n\r\n        if(error){\r\n            return <div>Erorr:{error.message}</div>\r\n        }\r\n        else if(!isLoaded){\r\n            return <div>Loading...</div>\r\n        }\r\n        else{\r\n            return (\r\n                \r\n            <div className=\"weatherInfoContainerStyle\">\r\n                <div className=\"flexStyle\">\r\n                    <ul>\r\n                        <li className=\"nowStyle\">NOW</li> \r\n                        <li className=\"cityFontSettings mainForcastAnim\">{items.name}, {sys.country}</li>\r\n                        <li className=\"mainForcastAnim\">\r\n                            {this.timeStampFunction(dt)}\r\n                        </li>\r\n                        <li className=\"floatElements\">\r\n                            <img className=\"weatherIconSettings\" \r\n                            src={\"https://openweathermap.org/img/w/\"+weatherIcon(weather)+\".png\"}\r\n                            alt=\"icon\"/>\r\n                            <div> {Math.round(main.temp)}<span className=\"celziusStyle\">&#176;</span>C</div>\r\n                        </li>\r\n                        <li className=\"mainForcastAnim\">Real Feel: {Math.round(main.feels_like)}\r\n                            <span>&#176;</span>C\r\n                        </li>\r\n                        <li className=\"mainForcastAnim\">\r\n                            {weatherDescription(weather).charAt(0).toUpperCase()\r\n                            +weatherDescription(weather).slice(1)}\r\n                        </li>\r\n                    </ul>\r\n                    <ul className=\"listStyle\">\r\n                        <li>\r\n                            Real Feel: {Math.round(main.feels_like)}\r\n                            <span>&#176;</span>C\r\n                        </li>\r\n                        <li>\r\n                            Humidity: {main.humidity}%\r\n                        </li>\r\n                        <li>\r\n                            Wind: {wind.speed} m/s\r\n                        </li>\r\n                        <li>\r\n                            Pressure: {main.pressure} hPa\r\n                        </li>\r\n                 \r\n                    </ul>\r\n                </div>\r\n                <div>\r\n                     <div className=\"hour3Forcast\">\r\n                         3 hour Forcast\r\n                     </div>\r\n                     <div className=\"forcastStyle\">\r\n                        {hourlyForcast(list)}  \r\n                     </div>\r\n                </div>\r\n               \r\n            </div> \r\n            \r\n            )\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default APIcall\r\n// ReactDOM.render(<APIcall />, document.getElementById('root'));","import React, {Component} from 'react';\r\nimport APIcall from './componentAPICall';\r\n\r\n\r\n\r\nclass SearchManager extends Component\r\n{\r\n    \r\n    \r\n    constructor(props){\r\n            super(props);\r\n            this.state = {\r\n               defaultCity: \"skopje\",\r\n               currentCity: \"skopje\",\r\n               newCityText:\"skopje\",\r\n          \r\n            }\r\n        console.log(this.state.newCityText)\r\n    }\r\n    \r\n    onChange = (e)=>{\r\n       this.setState({newCityText: e.target.value})\r\n              \r\n    }\r\n\r\n  \r\n    \r\n    // componentAPIreset = () =>{\r\n        \r\n        \r\n    //     this.forceUpdate( <APIcall urls={this.state.currentCity}  />)\r\n\r\n    // }\r\n\r\n    useForceUpdate=() => {\r\n        const [, forceUpdate] = React.useState();\r\n      \r\n        return (React.useCallback(() => {\r\n            forceUpdate(s => !s);\r\n          }, []),\r\n          this.setState({currentCity: \"skopje\"})\r\n          ) \r\n      }\r\n\r\n    // handleAPI=()=>{\r\n    //     if(this.state.currentCity != null)\r\n    //     {\r\n    //         return(\r\n    //             console.log(\"curent city se renderira\"),\r\n    //             <div><APIcall urls={this.state.currentCity }  /></div>\r\n                \r\n    //         )\r\n            \r\n    //     }\r\n    //     else if(this.state.currentCity === null){\r\n    //         return(\r\n    //             console.log(\"deafult city se renderira\"),\r\n    //             <div><APIcall urls={this.state.defaultCity }  /></div>\r\n                \r\n                \r\n    //         );\r\n            \r\n            \r\n    //     };\r\n    // }  \r\n    \r\n    returnCity(){\r\n        return this.state.newCityText\r\n\r\n        \r\n    }\r\n\r\n    handleSubmit = (e)=>{\r\n        e.preventDefault()\r\n        \r\n        // let currentCity2 = this.state.newCityText\r\n      \r\n       \r\n        this.setState({currentCity: this.state.newCityText}, ()=>this.returnCity())\r\n        \r\n        \r\n    }\r\n    render()\r\n    {\r\n        \r\n        \r\n       \r\n        \r\n            return (\r\n                \r\n                <div className=\"col rowSettings\">\r\n                  \r\n                    <form  onSubmit={this.handleSubmit}>\r\n                         <input className=\"inputSettings\" onChange={this.onChange} value={(this.state.newCityText)}/>\r\n                         <button className=\"buttonStyle\">OK</button>\r\n                    </form>\r\n                   \r\n                   <div  className=\"col formSettings\">\r\n                        <APIcall urls={this.state.currentCity}/>\r\n                   </div>\r\n                 \r\n                    \r\n                </div>\r\n                \r\n            );\r\n\r\n        \r\n    \r\n        \r\n        \r\n        \r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default SearchManager\r\n// ReactDOM.render(<SearchManager />, document.getElementById('root'));","import React, {Component} from 'react';\r\nimport SearchManager from './searchManagerComponent'\r\nimport image from './Images/sunset2.jpg'\r\n\r\n\r\nclass App extends Component{\r\n    \r\n    render(){\r\n       \r\n        \r\n       \r\n        return (\r\n            \r\n            <div className=\"mainDiv container-fluid\">\r\n                \r\n              \r\n                <div className=\"row\">\r\n                    <img src={image} className=\"imageSettings\" alt=\"backgroundImage\"/>  \r\n                    <div className=\"col mainWeatherDisplay\">\r\n                        \r\n                       <SearchManager />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                       \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app';\r\n// import SearchManager from './searchManagerComponent'\r\n// import APIcall from './componentAPICall'\r\n\r\n\r\n// ReactDOM.render(<APIcall />, document.getElementById('root'));\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","module.exports = __webpack_public_path__ + \"static/media/sunset2.311ea3d6.jpg\";"],"sourceRoot":""}